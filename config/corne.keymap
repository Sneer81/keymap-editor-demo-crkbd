/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    tapdancing: tapdancing {
      compatible = "zmk,behavior-tap-dance";
      label = "TAPDANCING";
      #binding-cells = <0>;
      tapping-term-ms = <150>;
      bindings = <&kp DOUBLE_QUOTES>, <&kp APOS>;
    };

    new_behavior: new_behavior {
      compatible = "zmk,behavior-hold-tap";
      label = "NEW_BEHAVIOR";
      bindings = <&kp>, <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <25>;
    };
  };

  combos {
    compatible = "zmk,combos";

    tab {
      bindings = <&trans>;
      key-positions = <2 3>;
    };

    ctrl {
      bindings = <&kp LCTRL>;
      key-positions = <26 27>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 38>;
    };

    alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <39 40>;
    };

    shift {
      bindings = <&kp LSHIFT>;
      key-positions = <8 9>;
    };

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };
  };

  macros {
    backspace: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings = <&macro_tap>, <&kp ENTER>, <&macro_press>, <&kp BACKSPACE>;

      tap-ms = <30>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&trans  &kp Q  &kp W  &kp F    &kp P                   &kp B              &kp J        &kp L                  &kp U                   &kp Y    &mt ESC SEMICOLON  &trans
&trans  &kp A  &kp R  &kp S    &kp T                   &kp G              &kp M        &kp N                  &kp E                   &kp I    &kp O              &trans
&trans  &kp Z  &kp X  &kp C    &kp D                   &kp V              &kp K        &kp H                  &kp COMMA               &kp DOT  &kp QUESTION       &trans
                      &kp TAB  &mt LEFT_SHIFT LS(TAB)  &lt 1 BACKSPACE    &lt 2 SPACE  &mt RC(RS(ESC)) ENTER  &mt SINGLE_QUOTE MINUS
      >;
    };

    raise {
      bindings = <
&trans  &trans           &trans          &trans          &kp MINUS        &new_behavior PLUS MINUS    &new_behavior KP_MULTIPLY KP_DIVIDE  &kp NUMBER_1                        &kp NUMBER_2     &kp NUMBER_3  &tapdancing      &trans
&trans  &mt LC(N) LC(W)  &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &trans                      &kp PERIOD                           &kp NUMBER_4                        &kp NUMBER_5     &kp NUMBER_6  &kp EXCLAMATION  &trans
&trans  &trans           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                      &kp KP_EQUAL                         &kp NUMBER_7                        &kp NUMBER_8     &kp NUMBER_9  &kp NUMBER_0     &trans
                                         &trans          &trans           &trans                      &mt LC(C) LC(V)                      &mt LG(LEFT_ARROW) LC(RIGHT_ARROW)  &mt RG(L) RG(E)
      >;
    };

    lower {
      bindings = <
&trans  &kp EXCL  &kp C_AL_INSTANT_MESSAGING  &kp C_MUTE                         &kp DLLR                    &kp PRCNT                        &kp CARET  &kp AMPS          &kp LPAR  &kp RPAR  &kp ESCAPE  &trans
&trans  &trans    &kp C_AC_REPLY              &kp C_VOLUME_UP                    &kp C_AC_ZOOM_IN            &kp HASH                         &kp PIPE   &kp K_CALCULATOR  &kp LBKT  &kp RBKT  &trans      &trans
&trans  &trans    &kp C_AC_FAVORITES          &kp C_VOLUME_DOWN                  &kp C_AC_ZOOM_OUT           &kp AT                           &kp UNDER  &kp TILDE         &kp LBRC  &kp RBRC  &kp SLASH   &trans
                                              &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &mt LC(ESC) LG(LEFT_ARROW)  &mt LG(M) LG(LS(RIGHT_ARROW))    &trans     &trans            &trans
      >;
    };

    both {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(0,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(120,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2    &bt BT_CLR    &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(240,60,50)
                        &trans  &trans  &trans          &trans        &trans  &trans
      >;
    };
  };
};
